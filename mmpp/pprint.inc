' Copyright (c) 2020 Thomas Hugo Williams

Const VT100_RED = Chr$(27) + "[31m"
Const VT100_GREEN = Chr$(27) + "[32m"
Const VT100_YELLOW = Chr$(27) + "[33m"
Const VT100_BLUE = Chr$(27) + "[34m"
Const VT100_MAGENTA = Chr$(27) + "[35m"
Const VT100_CYAN = Chr$(27) + "[36m"
Const VT100_WHITE = Chr$(27) + "[37m"
Const VT100_RESET = Chr$(27) + "[0m"

Dim TK_COLOUR$(6)
TK_COLOUR$(TK_IDENTIFIER) = VT100_WHITE
TK_COLOUR$(TK_NUMBER) = VT100_GREEN
TK_COLOUR$(TK_COMMENT) = VT100_YELLOW
TK_COLOUR$(TK_STRING) = VT100_MAGENTA
TK_COLOUR$(TK_KEYWORD) = VT100_CYAN
TK_COLOUR$(TK_SYMBOL) = VT100_WHITE
TK_COLOUR$(TK_DIRECTIVE) = VT100_RED

Dim pp_comment   ' 1 to print comments, 0 to ignore comments
Dim pp_count
Dim pp_empty = 1 ' 1 if previous printed line was empty or just contained a
                 ' comment, otherwise 0
Dim pp_file_num = -1
Dim pp_indent_lvl
Dim pp_indent_sz = 2

Sub pp_open(f$, comment)
  pp_comment = comment
  If f$ <> "" Then
    pp_file_num = 10
    Open f$ For Output As #pp_file_num
  EndIf

  pp_inc_line()
  pp_attrib(TK_COLOUR$(TK_COMMENT))
  pp_out("' Autogenerated on " + DateTime$(Now)) : pp_endl()
  pp_attrib(VT100_RESET)
  pp_inc_line()
  pp_endl()
End Sub

Sub pp_close()
  If pp_file_num > -1 Then Close #pp_file_num
End Sub

Sub pp_print_line()
  pp_print_compact()
End Sub

Sub pp_print_default()
  Local i, no_space, t$, u$

  For i = 0 To lx_num - 1
    If i = 0 Then pp_out(Space$(lx_start(i) - 1))
    t$ = lx_token$(i)
    If t$ <> "" Then
      pp_attrib(TK_COLOUR$(lx_type(i)))
      pp_out(t$)
      If i < lx_num - 1 Then
        u$ = lx_token$(i + 1)
        no_space = t$ = "("
        no_space = no_space Or u$ = "(" Or u$ = ")" Or u$ = "," Or u$ = ";"
        no_space = no_space And t$ <> "=" And t$ <> ","
        If Not no_space Then pp_out(" ")
      EndIf
    EndIf
  Next i
  pp_attrib(VT100_RESET)
  pp_endl()
End Sub

Sub pp_inc_line()
  pp_count = pp_count + 1
  If pp_file_num = -1 Then
    pp_attrib(VT100_WHITE)
    pp_out(Format$(pp_count, "%-4g") + ": ")
  EndIf
End Sub

Function pp_needs_space(i)
  Local t = lx_type(i)
  pp_needs_space = t = TK_KEYWORD Or t = TK_IDENTIFIER Or t = TK_NUMBER
End Function

Sub pp_print_compact()
  Local i, space, t$, u$

  If lx_num = 0 Then Exit Sub

  ' If we are not including comments and the line consists solely of a comment
  ' then ignore it.
  If Not pp_comment And lx_num = 1 And lx_type(i) = TK_COMMENT Then Exit Sub

  pp_inc_line()

  For i = 0 To lx_num - 1

    ' If we are not including comments and we reach a comment then don't process
    ' any further tokens ... there shouldn't be any.
    If Not pp_comment Then
      If i = lx_num - 1 And lx_type(i) = TK_COMMENT Then Exit For
    EndIf

    t$ = " " + lx_token_lc$(i) + " "
    If t$ = "  " Then Error "Empty token"

    ' If a line starts with Sub or Function and was not preceeded by an empty
    ' line then include one.
    If Not pp_empty Then
      If i = 0 And Instr(" sub function ", t$) > 0 Then pp_endl() : pp_inc_line()
    EndIf

    ' Tokens requiring us to decrease the indent level before printing them.
    If Instr(" else elseif endif end loop next exit ", t$) > 0 Then
      pp_indent_lvl = pp_indent_lvl - 1
      If t$ = " end " Then pp_indent_lvl = pp_indent_lvl - 1
      ' Print "{"; pp_indent_lvl; "}";
    EndIf

    ' Indent the first line.
    If i = 0 and pp_indent_lvl > 0 Then pp_out(Space$(pp_indent_lvl * pp_indent_sz))

    ' Output the token with a trailing space where required.
    pp_attrib(TK_COLOUR$(lx_type(i)))
    pp_out(lx_token$(i))
    If i < lx_num - 1 Then
      If pp_needs_space(i) And pp_needs_space(i + 1) Then pp_out(" ")
    EndIf

    ' Tokens requiring us to increase the indent level after printing them.
    If Instr(" else then for do sub function ", t$) > 0 Then
      If t$ = " else " Then
        u$ = lx_token_lc$(i + 1)
        If u$ <> "if" Then pp_indent_lvl = pp_indent_lvl + 1
      ElseIf t$ = " for " Then
        u$ = " " + lx_token_lc$(i + 1) + " "
        If Instr(" input output random ", u$) <= 0 Then pp_indent_lvl = pp_indent_lvl + 1
      ElseIf t$ = " then " Then
        u$ = lx_token_lc$(i + 1)
        If u$ = "" Or Left$(u$, 1) = "'" Then pp_indent_lvl = pp_indent_lvl + 1
      Else
        pp_indent_lvl = pp_indent_lvl + 1
      EndIf
      ' Print "{"; pp_indent_lvl; "}";
    EndIf
  Next i

  pp_attrib(VT100_RESET)
  pp_endl()

  pp_empty = lx_num = 0 Or lx_type(0) = TK_COMMENT

  ' If a line ends with End Function|Sub then output an extra empty line.
  If Instr(" function sub ", t$) Then
    u$ = lx_token_lc$(lx_num - 2)
    If u$ = "end" Then  pp_inc_line() : pp_endl() : pp_empty = 1
  EndIf

End Sub

Sub pp_attrib(c$)
  If pp_file_num < 0 Then pp_out(c$)
End Sub

Sub pp_out(s$)
  If pp_file_num < 0 Then
    Print s$;
  Else
    Print #pp_file_num, s$;
  EndIf
End Sub

Sub pp_endl()
  If pp_file_num < 0 Then Print Else Print #pp_file_num
End Sub
